[{"/Users/dashaglushneva/Desktop/Developer/test-project/web/src/index.tsx":"1","/Users/dashaglushneva/Desktop/Developer/test-project/web/src/reportWebVitals.ts":"2","/Users/dashaglushneva/Desktop/Developer/test-project/web/src/page/Home/index.tsx":"3","/Users/dashaglushneva/Desktop/Developer/test-project/web/src/utils/api.js":"4","/Users/dashaglushneva/Desktop/Developer/test-project/web/src/utils/functions.js":"5","/Users/dashaglushneva/Desktop/Developer/test-project/web/src/components/Loader.js":"6","/Users/dashaglushneva/Desktop/Developer/test-project/web/src/components/Card.js":"7"},{"size":485,"mtime":1609339788971,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1609339271171,"results":"10","hashOfConfig":"9"},{"size":1107,"mtime":1609410440160,"results":"11","hashOfConfig":"9"},{"size":3429,"mtime":1609411698337,"results":"12","hashOfConfig":"9"},{"size":1010,"mtime":1609409826879,"results":"13","hashOfConfig":"9"},{"size":427,"mtime":1609411655259,"results":"14","hashOfConfig":"9"},{"size":687,"mtime":1609416350950,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1gnscp6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dashaglushneva/Desktop/Developer/test-project/web/src/index.tsx",[],["33","34"],"/Users/dashaglushneva/Desktop/Developer/test-project/web/src/reportWebVitals.ts",[],"/Users/dashaglushneva/Desktop/Developer/test-project/web/src/page/Home/index.tsx",["35"],"import React, { useState, useEffect } from \"react\";\nimport Card from \"../../components/Card\";\nimport { getSearchAll } from \"../../utils/api\";\nimport { CustomLoader } from \"../../components/Loader\";\n\nexport default function Home() {\n  const [mas, setMas] = useState([]);\n  const [isFeath, setFeath] = useState(true);\n\n  // useEffect(() => {\n  //   getData();\n  // }, [mas]);\n\n  async function getData() {\n    setFeath(false);\n    let data = await getSearchAll();\n    if (data.error) {\n      setMas(mas);\n      setFeath(true);\n    } else {\n      console.log(\"data\", data);\n      setMas(data.results);\n      setFeath(true);\n    }\n  }\n\n  return (\n    <div>\n      <div className='search' style={{ display: \"flex\" }}>\n        <input />\n        <button onClick={() => getData()}>Поиск</button>\n      </div>\n      {isFeath ? (\n        <div>\n          {console.log(\"mas\", mas)}\n          {mas.length !== 0\n            ? mas.map((item, index) => <Card key={index} object={item} />)\n            : null}\n        </div>\n      ) : (\n        <div>\n          <CustomLoader />\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/dashaglushneva/Desktop/Developer/test-project/web/src/utils/api.js",[],"/Users/dashaglushneva/Desktop/Developer/test-project/web/src/utils/functions.js",[],["36","37"],"/Users/dashaglushneva/Desktop/Developer/test-project/web/src/components/Loader.js",[],"/Users/dashaglushneva/Desktop/Developer/test-project/web/src/components/Card.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]